library("tidyverse")
library("ggplot2")
library("dplyr")
library("bupaverse")
library("lubridate")
library("stringr")
library("stringdist")
library("DescTools")
library("PTXQC")
library("qgraph")
setwd("c:\\Users\\malat\\OneDrive\\Bureau\\S6\\Stage\\StageL3MIDL")
source("seqToString.R")
source("utilsClustering.R")
matrix<-stringdistmatrix(list_of_strings, list_of_strings, method = "lcs")
matrix
library("tidyverse")
library("ggplot2")
library("dplyr")
library("bupaverse")
library("lubridate")
setwd("c:\\Users\\malat\\OneDrive\\Bureau\\S6\\Stage\\StageL3MIDL")
ds <- read.csv(".\\data_rugby.csv", sep=";", dec=".")
DATE_MATCH = "29-04-2023"
#on filtre les donées pour garder uniquement les colonnes "utiles"
ds_final = data.frame(ds["team_id"], ds["ps_timestamp"],ds["ps_endstamp"], ds["action"], ds["actionName"], ds["sequence_id"])
unused_actions = list("Ref Review", "Sub In", "Sub Out", "Sequence", "", "Playmaker Options", "Period", " ", "Collection")
ds_final <- subset(ds_final, subset = !(actionName %in% unused_actions ))
#on catégorise chaque action selon 3 catégories: O (Offensif), D (Defensif), N (Neutre)
categories = c("O", "D", "O", "O", "D", "O", "N", "N", "O", "O", "O", "D", "N")
categories[14]<- "N"
categories[21]<-"N"
categories[23]<-"D"
categories[24]<-"D"
categories[27]<-"O"
categories[40]<-"D"
categories[43]<-"N"
categories[44]<-"O"
categories[45]<-"D"
categories[46]<-"O"
#conversion des timestamp en type POSIXct
secondes_avec_ms <-  as.numeric(ds_final$ps_timestamp)
date_posix <- as.POSIXct(secondes_avec_ms, origin = "1970-01-01", tz = "UTC")
ds_final$date_posix_start <- date_posix
secondes_avec_ms <-  as.numeric(ds_final$ps_endstamp)
date_posix <- as.POSIXct(secondes_avec_ms, origin = "1970-01-01", tz = "UTC")
ds_final$date_posix_end <- date_posix
#ajout colonne position sur le terrain
ds_final$zoneAction <- rep(1, nrow(ds_final))
set_zone <- function(equipe){
if (equipe == 2300){
return(0)
}
if (equipe == 2350){
return(2)
}
}
l<-1
while (l<nrow(ds_final)){
if (ds_final[l,"actionName"]=="Opposition 22 Entry"){
debut <- ds_final[l, "date_posix_start"]
fin <- ds_final[l, "date_posix_end"]
equipe <- ds_final[l, "team_id"]
while (ds_final[l, "date_posix_end"]<=fin){
ds_final[l, "zoneAction"]<- set_zone(equipe)
l <- l+1
}
} else{
l <- l+1
}
}
#séquençage
n_sequence = 1
while (l %in% 1:nrow(ds_final)){
ds_final[l,"sequence_id"] = n_sequence
print("ho")
if (ds_final[l,"actionName"] == "Possession"){
temps_fin <- ds_final[l,"actionName"]
show(temps_fin)
l<-l+1
while (ds_final[l, "date_posix_end"]==temps_fin){
ds_final[l,"sequence_id"] = n_sequence
l<-l+1
}
n_sequence = n_sequence +1
}
l<-l+1
}
n_sequence
nrow(ds_final)
l
print(ds_final[l])
print(ds_final[l,])
n_sequence = 1
while (l %in% 1:nrow(ds_final)){
ds_final[l,"sequence_id"] = n_sequence
print("ho")
print(ds_final[l,"actionName"])
if (ds_final[l,"actionName"] == "Possession"){
temps_fin <- ds_final[l,"actionName"]
show(temps_fin)
l<-l+1
while (ds_final[l, "date_posix_end"]==temps_fin){
ds_final[l,"sequence_id"] = n_sequence
l<-l+1
}
n_sequence = n_sequence +1
}
l<-l+1
}
ds_final[2, "actionName"]
#séquençage
n_sequence = 1
while (l %in% 1:nrow(ds_final)){
ds_final[l,"sequence_id"] = n_sequence
print(ds_final[l,"actionName"])
if (ds_final[l,"actionName"] == "Possession"){
temps_fin <- ds_final[l,"actionName"]
print(temps_fin)
l<-l+1
while (ds_final[l, "date_posix_end"]==temps_fin){
ds_final[l,"sequence_id"] = n_sequence
l<-l+1
}
n_sequence = n_sequence +1
}
l<-l+1
}
temps_fin
print(ds_final[l,"actionName"])
print(temps_fin)
n_sequence = 1
while (l %in% 1:nrow(ds_final)){
ds_final[l,"sequence_id"] = n_sequence
print(ds_final[l,"actionName"])
if (ds_final[l,"actionName"] == "Possession"){
temps_fin <- ds_final[l,"actionName"]
print(temps_fin)
l<-l+1
while (ds_final[l, "date_posix_end"]==temps_fin){
ds_final[l,"sequence_id"] = n_sequence
l<-l+1
}
n_sequence = n_sequence +1
}
l<-l+1
}
show(ds_final)
Show(ds_final)
View(ds_final)
#séquençage
n_sequence = 1
while (l %in% 1:nrow(ds_final)){
ds_final[l,"sequence_id"] = n_sequence
print(ds_final[l,"actionName"])
if (ds_final[l,"actionName"] == "Possession"){
temps_fin <- ds_final[l,"ps_endstamp"]
print(temps_fin)
l<-l+1
while (ds_final[l, "ps_endstamp"]==temps_fin){
ds_final[l,"sequence_id"] = n_sequence
l<-l+1
}
n_sequence = n_sequence +1
}
l<-l+1
}
library("tidyverse")
library("ggplot2")
library("dplyr")
library("bupaverse")
library("lubridate")
setwd("c:\\Users\\malat\\OneDrive\\Bureau\\S6\\Stage\\StageL3MIDL")
ds <- read.csv(".\\data_rugby.csv", sep=";", dec=".")
DATE_MATCH = "29-04-2023"
#on filtre les donées pour garder uniquement les colonnes "utiles"
ds_final = data.frame(ds["team_id"], ds["ps_timestamp"],ds["ps_endstamp"], ds["action"], ds["actionName"], ds["sequence_id"])
unused_actions = list("Ref Review", "Sub In", "Sub Out", "Sequence", "", "Playmaker Options", "Period", " ", "Collection")
ds_final <- subset(ds_final, subset = !(actionName %in% unused_actions ))
#on catégorise chaque action selon 3 catégories: O (Offensif), D (Defensif), N (Neutre)
categories = c("O", "D", "O", "O", "D", "O", "N", "N", "O", "O", "O", "D", "N")
categories[14]<- "N"
categories[21]<-"N"
categories[23]<-"D"
categories[24]<-"D"
categories[27]<-"O"
categories[40]<-"D"
categories[43]<-"N"
categories[44]<-"O"
categories[45]<-"D"
categories[46]<-"O"
#conversion des timestamp en type POSIXct
secondes_avec_ms <-  as.numeric(ds_final$ps_timestamp)
date_posix <- as.POSIXct(secondes_avec_ms, origin = "1970-01-01", tz = "UTC")
ds_final$date_posix_start <- date_posix
secondes_avec_ms <-  as.numeric(ds_final$ps_endstamp)
date_posix <- as.POSIXct(secondes_avec_ms, origin = "1970-01-01", tz = "UTC")
ds_final$date_posix_end <- date_posix
#ajout colonne position sur le terrain
ds_final$zoneAction <- rep(1, nrow(ds_final))
set_zone <- function(equipe){
if (equipe == 2300){
return(0)
}
if (equipe == 2350){
return(2)
}
}
l<-1
while (l<nrow(ds_final)){
if (ds_final[l,"actionName"]=="Opposition 22 Entry"){
debut <- ds_final[l, "date_posix_start"]
fin <- ds_final[l, "date_posix_end"]
equipe <- ds_final[l, "team_id"]
while (ds_final[l, "date_posix_end"]<=fin){
ds_final[l, "zoneAction"]<- set_zone(equipe)
l <- l+1
}
} else{
l <- l+1
}
}
#séquençage
n_sequence = 1
while (l %in% 1:nrow(ds_final)){
ds_final[l,"sequence_id"] = n_sequence
print(ds_final[l,"actionName"])
if (ds_final[l,"actionName"] == "Possession"){
temps_fin <- ds_final[l,"ps_endstamp"]
print(temps_fin)
l<-l+1
while (ds_final[l, "ps_endstamp"]==temps_fin){
ds_final[l,"sequence_id"] = n_sequence
l<-l+1
}
n_sequence = n_sequence +1
}
l<-l+1
}
