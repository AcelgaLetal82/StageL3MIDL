for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
}
print("ok3")
print(tmp)
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
merge_from_subseq("babbabakkko", "akkkio", "kkk")
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
print(tmp)
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
tmp[2:3]<-StrAlign(c("aaa", "bbba"))
tmp
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print(subset_str1)
print(subset_str2)
print("ok2")
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
print(tmp)
for (k in 2:(length(subset_str1)-1)){
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
print(tmp)
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
print(tmp)
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
length(StrAlign("aa", ""))
length(StrAlign("aa", "aa"))
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
print(tmp)
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-unlist(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
length(unlist(StrAlign("aa", "aa")))
StrAlign(c("aa", "aa"))
length(StrAlign(c("aa", "aa")))
tmp[1:2]<-length(StrAlign(c("aa", "aa")))
tmp
tmp[1:2]<-StrAlign(c("aa", "aa"))
tmp
tmp[1:2]<-StrAlign(c("aa", "aaba"))
tmp
tmp[3:4]<-StrAlign(c("aa", "aaba"))
tmp
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-rep("", 0:length(subset_str2))
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-rep("", length(subset_str2))
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp)
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-rep("", length(subset_str2))
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp[2*k-1:2*k])
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-rep(0, length(subset_str2))
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(tmp[2*k-1:2*k])
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-rep(0, length(subset_str2))
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(length(tmp))
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-rep(0, length(subset_str2))
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
tmp[2*k:2*k+1]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(length(tmp))
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1)-1)){
print(c(2*k-1, 2*k))
print(c(subset_str1[k], subset_str2[k]))
tmp[2*k-1:2*k]<-StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l")
print(length(tmp))
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
tmp<-c(2,3,4)
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1))){
print(c(2*k-1, 2*k))
print(c(subset_str1[k], subset_str2[k]))
tmp<append(tmp,StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
print(length(tmp))
print(StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1))){
tmp=append(tmp,StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print(tmp)
print("ok3")
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output[k]<-choose_letters(tmp[2*k-1], tmp[2*k])
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1))){
tmp=append(tmp,StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
print(tmp)
print("ok3")
output<-c()
for (k in 1:(length(tmp)/2)){
print(c(k, 2*k-1, 2*k))
output=append(output,choose_letters(tmp[2*k-1], tmp[2*k]))
}
print("ok4")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1))){
tmp=append(tmp,StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
output<-c()
for (k in 1:(length(tmp)/2)){
output=append(output,choose_letters(tmp[2*k-1], tmp[2*k]))
}
output<-str_replace_all(output, " ", "")
output<-str_c(output)
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
str_c("aa","aa")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1))){
tmp=append(tmp,StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
output<-c()
for (k in 1:(length(tmp)/2)){
output=append(output,choose_letters(tmp[2*k-1], tmp[2*k]))
}
output<-str_replace_all(output, " ", "")
output<-str_c(unlist(output))
return(output)
}
str_c("aa","aa")
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq <- function(str1, str2, subseq){
pos_str1 = get_pos_subseq(str_to_vec(str1), str_to_vec(subseq))
pos_str2 = get_pos_subseq(str_to_vec(str2), str_to_vec(subseq))
print("ok1")
subset_str1<-get_subsets(str1, pos_str1)
subset_str2<-get_subsets(str2, pos_str2)
print("ok2")
tmp<-c()
tmp <- StrAlign(c(subset_str1[1], subset_str2[1]), sep="\\r")
for (k in 2:(length(subset_str1))){
tmp=append(tmp,StrAlign(c(subset_str1[k], subset_str2[k]), sep="\\l"))
}
output<-c()
for (k in 1:(length(tmp)/2)){
output=append(output,choose_letters(tmp[2*k-1], tmp[2*k]))
}
output<-str_replace_all(output, " ", "")
output <- paste(output, collapse="")
return(output)
}
merge_from_subseq("babbabakkko", "akkkio", "kkk")
merge_from_subseq("babbabakkko", "akkkio", "kkk")
